# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto_file_pb2 as proto__file__pb2


class MyGreeterStub(object):
    """The greeting service definition.

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMap = channel.unary_unary(
                '/MyGreeter/GetMap',
                request_serializer=proto__file__pb2.Empty.SerializeToString,
                response_deserializer=proto__file__pb2.Map.FromString,
                )
        self.GetCommands = channel.unary_unary(
                '/MyGreeter/GetCommands',
                request_serializer=proto__file__pb2.RoverID.SerializeToString,
                response_deserializer=proto__file__pb2.Commands.FromString,
                )
        self.GetMineSerialNum = channel.unary_unary(
                '/MyGreeter/GetMineSerialNum',
                request_serializer=proto__file__pb2.MineLocation.SerializeToString,
                response_deserializer=proto__file__pb2.SerialNum.FromString,
                )
        self.BotSuccees = channel.unary_unary(
                '/MyGreeter/BotSuccees',
                request_serializer=proto__file__pb2.Empty.SerializeToString,
                response_deserializer=proto__file__pb2.BotStatus.FromString,
                )
        self.MinePin = channel.unary_unary(
                '/MyGreeter/MinePin',
                request_serializer=proto__file__pb2.Pin.SerializeToString,
                response_deserializer=proto__file__pb2.Empty.FromString,
                )


class MyGreeterServicer(object):
    """The greeting service definition.

    """

    def GetMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCommands(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMineSerialNum(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BotSuccees(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MinePin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MyGreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMap,
                    request_deserializer=proto__file__pb2.Empty.FromString,
                    response_serializer=proto__file__pb2.Map.SerializeToString,
            ),
            'GetCommands': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCommands,
                    request_deserializer=proto__file__pb2.RoverID.FromString,
                    response_serializer=proto__file__pb2.Commands.SerializeToString,
            ),
            'GetMineSerialNum': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMineSerialNum,
                    request_deserializer=proto__file__pb2.MineLocation.FromString,
                    response_serializer=proto__file__pb2.SerialNum.SerializeToString,
            ),
            'BotSuccees': grpc.unary_unary_rpc_method_handler(
                    servicer.BotSuccees,
                    request_deserializer=proto__file__pb2.Empty.FromString,
                    response_serializer=proto__file__pb2.BotStatus.SerializeToString,
            ),
            'MinePin': grpc.unary_unary_rpc_method_handler(
                    servicer.MinePin,
                    request_deserializer=proto__file__pb2.Pin.FromString,
                    response_serializer=proto__file__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MyGreeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MyGreeter(object):
    """The greeting service definition.

    """

    @staticmethod
    def GetMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MyGreeter/GetMap',
            proto__file__pb2.Empty.SerializeToString,
            proto__file__pb2.Map.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCommands(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MyGreeter/GetCommands',
            proto__file__pb2.RoverID.SerializeToString,
            proto__file__pb2.Commands.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMineSerialNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MyGreeter/GetMineSerialNum',
            proto__file__pb2.MineLocation.SerializeToString,
            proto__file__pb2.SerialNum.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BotSuccees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MyGreeter/BotSuccees',
            proto__file__pb2.Empty.SerializeToString,
            proto__file__pb2.BotStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MinePin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MyGreeter/MinePin',
            proto__file__pb2.Pin.SerializeToString,
            proto__file__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
